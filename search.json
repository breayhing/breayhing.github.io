[{"title":"建站踩坑录","url":"/2023/03/02/blog%E5%BB%BA%E7%AB%8B%E7%AB%99%E7%82%B9%E8%AE%B0%E5%BD%95/","content":"在经历长达一天的艰苦修改（改一些奇奇怪怪的神奇bug）之后，这个网站总算是建立起来了，之后的时间应该就是使用这里来记录一些学习中的记录以及一些日常的琐碎话吧\n\n建站鸣谢：傻白的blog以及帮了很大忙的131blog\n传送门：\n启用主题 | 131’s Blog (cxy131.site)\nはくのblog (sirohune.site)\n\n踩坑实录：\nhexo d #部署网站\n\n坑点在于之前使用jekyll部署过网站，因此再使用hexo部署时会导致出现很神奇的bug：github相应网页的代码更新，但是action中显示没有部署。来回摸索好久\n最终解决方案：将原本的GitHub库删除重新搭建（删库跑路法），成功\n","tags":["那些神奇的坑与神奇的问题"]},{"title":"sse-net计算机网络笔记","url":"/2023/03/02/sse-net%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/","content":"参考网课：\nChapter 1protocol:发起连接时候双方都遵守的一定规则(规范语法，语义，时序)\nDSL：最之前家庭网络连接方法（数字用户线）\ninternet标准：\n\nRFC\nIETF\nWIFI\nWAPI\n\nTCP：传输控制协议，应用\n\nHTTP\nFTP\nSMTP\nTelnet\n\nHost:数据发送方\nLinks:实体媒介（网络线缆等等）\n结论：链路交换不适合计算机之间通信\n\n建立时间长\n可靠性低\n浪费资源较多\n\nChapter 2提问部分：\n对于浏览器下载文件通常是分为小切片下载在缓存中并通过相关算法拼凑，如果中断重新连接能否继续下载则看软件相关系统处理方式怎么样\n对于访问github等网站时（应用层web部分）如果访问时间过长系统会判定为连接失败从而放弃\n\n开始讲解分组交换\n分组交换与电路交换电路交换：\n优点：\n\n由于通信线路为通信双方用户专用，数据直达，所以传输数据的时延非常小。\n通信双方之间的屋里通路一旦建立，双方可以随时通信，实时性强。\n双方通信时按发送顺序传送数据，不存在失序问题。\n电路交换既适用于传输模拟信号，也适用于传输数字信号。\n电路交换的交换设备及控制均比较简单。\n\n缺陷：\n\n电路交换平均连接建立时间对计算机通信来说较长。\n电路交换家里连接后，物理通路被通信双方独占，即使通信线路空闲，也不能供其他用户使用，因而信道利用率低。\n电路交换时，数据直达，不同类型，不同规格，不同速率的终端很难相互进行通信，也难以在通信过程中进行差错控制。\n\n分组交换\n优点：\n\n不存在连接建立时延，用户可随时发送分组\n传输可靠性高\n通信双方在不同时间段一段一段地部分占有物理通路，提高了通信线路利用率\n加速了数据在网络中的传输\n简化了交换节点中存储器的管理\n分组较短，出错几率减少，可靠性高，时延低\n\n缺点：\n\n通信量越大，时延越大，实时性较差\n只适用于数字信号\n可能出现失序，丢失或者重复分组\n\n综上，若传输的数据量很大，而且传送时间远大于呼叫时间，则采用电路交换较为合适；当端到端的通路有很多段链路组成是，采用分组交换较为合适。从提高整个网络的信道利用率上看，分组交换优于电路交换。\nTDM&#x2F;FDM（电路交换）TDM：()时分复用\nFDM：()频分复用\nTDM相对FDM优点：\n\n发生拥塞等网络问题时，TDM中数据丢失可能只会是一部分，FDM中就可能是大部分或全部\n电路交换中时分复用能高效地使用网络，因为频分复用建立后，如果中途没有数据传输时，所占有的频段带宽不能被其它连接使用，可能存在空置\n\n分组交换网络 存储-转发\nISP第一层ISP：面向客户网络结算点（负责收费）\nIXP：连接多个对等之间的ISP\nICP：（conternt provider）部署自身专用网络并且与各级ISP连接\n网络中每一个节点都是不一样的\n四种延迟传输延迟：一个数据分组需要多长时间发送出来（缓存中也有一个排队延迟）\n处理延时：分组时候查看信号是否有错误情况，\n排队延时：随机的，与当前网络情况相关（比如发送请求）\n传播延迟：物理层面传播的延迟（在线路中传输的速度）\n应用：可以根据运营商的中心机房位置去抢票（乐）\nChapter 3TTLtime to live\n连接时候给定连接时间，超过该时间则认定为连接超时，随后显示网络连接失败\n吞吐量给定时间内平均吞吐量\n协议层网络层次：不同邻接层次之间有相应接口来传输，每一层都向上一层提供服务\n分层顺序：5层\n应用层，传输层，网络层，链路层，物理层\n服务访问点：SAP，上层使用下层的服务通过层之间的接口-地点\n举例：邮箱（SMTP）\n无连接服务：无需预留资源，不需要双方活跃（比如email传输和qq等聊天软件发送信息）\n网络连接需要：端口号\n网络安全部分：\n","tags":["学习bi'ji"]},{"title":"CS-net-assignment#1","url":"/2023/03/03/cs-net-assignment-1/","content":"SSE206 Computer Networks Assignment #1Q1：\n今天最流行的无限因特网接入技术有WIFI和4G接入。WIFI速度快但距离短（距离基站近），4G速度慢但距离远（距离基站远），以及最新的5G技术，相对于4G具有更低时间延迟，更高连接速率。\nQ2：\n电路交换更适合。\n原因：对于以稳定速率传输数据，并且持续长时间运行的应用程序。电路交换网可以\n\n传输数据速率稳定，因此电路交换可以为其保留带宽，可以为其保留带宽，保证应用程序以稳定的速率接收数据\n由于需要持续长时间运行，即不需要重复建立连接，分组交换相对电路交换的优势并不大\n通信线路为双方专用，数据直达，故传输时延非常小\n\nQ3：（不确定，回头再检查）\na. 第一个分组交换需要的时间为&#x3D;报文大小&#x2F;链路速率&#x3D; 8 * 10^6 &#x2F; 2 * 10^6 sec &#x3D; 4 sec 源主机到目的主机有三段链路，需要时间为 3 * 4 &#x3D; 12 sec\nb. 从源主机发送第一个分组到第一台交换机1 * 10^4 &#x2F; 2 * 10^6 sec &#x3D; 5 m sec 从第一台交换机发送第一个分组到第二台交换机时间 &#x3D; 从源主机发送第二个分组到第一台交换机时间 &#x3D; 2 * 5 m sec &#x3D; 10 m sec\nc. 第一个分组到达目的地时，花费的时间为 5 m sec * 3 &#x3D; 15 m sec,之后，每隔 5 秒将会有一个分组被接收，一共有 800 个分组 ，除去第一个分组，传输该文件所需要的时间为 15 m sec + 799 * 5 msec &#x3D; 4.01 sec。\nd. \n使用报文分段便于检测错误并且重新传输，不分段的大数据包则容易使得路由器缓存不足导致丢包。\nQ4:\nSkype因为是采用私有信令协议，与运营商的电话网络所使用信令协议不同，因此需要专业的语音网关进行信令转换，因此简单的通信模型如下\nSkype客户端→Skype服务器→语音网关→运营商线路→个人电话\n即语音呼叫必须通过因特网（服务器请求），与电话网（对运营商线路发出请求）\nQ5:\n相对与分组交换网络，电路交换网络优点有：\n\n传输时延非常小\n可以随时通信，实时性强\n不存在失序问题\n交换设备及控制都简单\n\n电路交换网络中，TDM相对FDM优点：\n\n发生拥塞等网络问题时，TDM中数据丢失可能只会是一部分，FDM中就可能是大部分或全部\n电路交换中时分复用能高效地使用网络，因为频分复用建立后，如果中途没有数据传输时，所占有的频段带宽不能被其它连接使用，可能存在空置\n\nQ6:\n\n各层对应: 一-物理层, 二-链路层, 三-网络层, 四-运输层, 五-应用层\n路由器处理第一层到第三层\n链路层交换机处理第一层和第二层\n主机处理所有五层.\n\n","tags":["cs-net"]},{"title":"web技术学习笔记","url":"/2023/03/08/web%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/","content":"关于ReactReact渲染原理：react渲染原理 - 掘金 (juejin.cn)\nReact笔记HOOKs：","tags":["项目实习笔记"]},{"title":"数电","url":"/2023/03/04/%E6%95%B0%E7%94%B5/","content":"考完试的感觉就是：题量哈人。\n两个小时的考试时间实际上是很紧张的，主要在于画卡诺图和真值表部分。\n\n考题中出现的一些重点（想起啥算啥吧）\n选择&#x2F;填空：第十章和第十一章的比例相当高，而且其实占分比还是挺高的(关于存储器，尤其是第十一章的信号转换)\n大题设计：重点在于了解三个基础芯片（151，138，73都考到了，和老师说的一致），以及快速，准确地画好卡诺图和真值表，否则时间会很紧张\n","tags":["考试复盘"]},{"title":"软件分析与设计","url":"/2023/03/08/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/","content":"导论软件生命周期\n\n软件定义\n软件开发\n软件维护\n\n人年&#x2F;人月：工程计量单位：一个人干一年&#x2F;月\n相对于实体制造业，软件开发主要困难：正确的软件需求分析与架构设计\n建模：对于某一问题进行一定程度的抽象以更好理解其本质\n软件建模：编码之前对软件应用进行的设计\nUML：统一模型语言：便于理解\n多视图建模\n用例建模：系统的功能性需求按照用例与参与者进行定义\n静态建模：提供系统的结构化视图，类按照其属性及其与其它类的关系进行定义\n动态建模：系统行为视图，主要描述对象之间的交互行为\n软件体系结构：系统的总体结构\n\n**COMET：主要建模方法，基于面向对象 的核心方法：Collaborative Object Modeling **\nch1：软件生存周期模型（第三章）软件生存周期：将软件本身视为不断迭代的产物，即每一个阶段都有相应目标和计划\n软件过程模型：对于软件开发过程中的抽象\n几种开发模型：瀑布模型：有迭代和重复\n抛弃型模型：复杂系统开发。可以理解为每一个瀑布模型的阶段都开发一个相应的小系统用于检验设计正确性与阐明用户需求\n演化式模型：首先开发一个最小系统（满足基本要求）然后不断在基础上添加内容（想想南大操作系统课程的说法，按照所需内容开发一个最小的核心然后不断添加内容）中级实训实际就可以考虑这种方法\n螺旋模型：强调风险分析\nUSDP：统一软件开发过程\n软件验证和确认：\nSQA：软件测试？\n软件测试：单元测试：\n集成测试：\n系统测试：压力测试等等（如web应用如何处理大量请求）\n3.8日问题：\n\n事件同步是异步的怎么理解？\n\n即发出消息之后是否需要等待\n如网络连接之后发送请求，需要发送方向接收方发送请求，接受方再回复，这需要立刻执行，属于同步\n如聊天，一方说话，一方不需要立刻回复，属于异步\n\n\n生产者&#x2F;消费者问题为何不需要事件同步+ \n\n系统需求与需求分析的差别\n\n需求分析：透过调研问卷、访谈等方式，挖掘客户所描述需求背后的管理诉求和要解决的问题‘\n**系统分析是在需求分析的基础上，抓大放小，针对客户核心价值诉求，结合工具和方法逐步*勾勒和细化解决方案的过程*。\n\n\n消息与事件\n\n\n异步消息通信：\n\n松耦合的消息通信，再生产者和消费者之间可以建立一条消息队列\n\n软件模式经常出现问题：重复造轮子\n软件模式：\n\n体系结构\n\n定义一个系统中主要子系统的结构\n\n\n分析模式：\n\n采用静态模型\n\n\n设计模式：描述重复出现的设计问题，对问题的解决方案以及解决方案工作的上下文（去读大话设计模式）\n\n属于一种比类粒度更大的使用方式\n\n\n习惯用法\n\n针对特定编程语言的设计模式\n如：\nC与C++偏向底层，但是同时内存管理差，自己可以做到的东西多，运行速度快\nGo：垃圾回收机制完整，适合并发，服务器与云的构建\nJavascript:一种脚本语言，但是指网页中的事件\n\n\n\n\n\n构件：\n\n定义：自包含的，且具有良好定义接口的对象\n\n链接器：\n\n封装多个构件之间的互连协议\n\n软件质量属性\n定义：软件的质量需求，也称为非功能性需求\n包括：\n可维护性：部署之后能够被更改的程度\n可修改性：最初开发期间和最初开发之后能够被修改的成都\n可测试性：能够被测试的程度\n可追踪性：每个阶段产品能够被追溯到上一阶段产品的程度\n可伸缩性：针对用户量增长时如何快速应对\n可复用性：之后的系统也可以使用\n性能：吞吐量，响应速度等\n安全性：抵御安全威胁的程度\n可用性：能够解决系统失效问题的程度（某个模块失效了能不能快速顶住）\n\n\n\n总结：\n对象 ，类，信息隐藏，集成\n主动对象，被动对象\n顺序应用，并发应用\n\n软件体系结构COMET：写作的对象建模和设计方法\n差异概念：用户与客户\n\n用户：软件面对的人（如使用聊天系统的人）\n客户：发起系统构建的人（即甲方爸爸），如提出要求构建一个聊天系统\n\n用例：\n\n参与者与用户交互\n\n需求建模：开发需求模型\n分析模型：状态图\n\n如对于各种可能的操作应当有怎样的输出回复\n\n设计建模\n设计系统的体系结构\n\n构建软件与硬件关系\n构件与相关的链接关系确定\n\n\n问题域的分析模型映射到解域的设计模型\n\n提供子系统组织准则将系统组织为子系统\n\n子系统设计\n\n顺序系统\n信息隐藏\n类\n继承\n\n\n并发系统（如实时，客户端&#x2F;服务器和分布式应用，如项目部署多个机器）\n额外考虑并发任务\n\n\n目的：子系统对于构件与链接关系的确定\n\n\n\n增量软件集成软件测试\n\n集成测试（测试好的构件进行组合，属于白盒测试，也在意整体构建方式）\n系统测试（黑盒测试，只管测试输入与输出是否对应）\n\n测试种类\n\n系统测试（功能测试）\n压力测试（如某一时刻的大量数据输入）\n性能测试（吞吐量等等）\n\nCOMET   USDPCOMET的每一个阶段都对应USDP的一个工作流\n需求，分析与设计建模\n\n用例建模\n陈述非功能性需求\n\n分析建模的活动\n\n重点在于问题理解，标识问题域的对象与对象间传递的信息\n\n设计建模的活动\n集成对象通信模型\n子系统结构与接口的决策\n类接口的决策\n消息特性的决策\n\n","tags":["学习笔记"]}]