[{"title":"建站踩坑录","url":"/2023/03/02/blog%E5%BB%BA%E7%AB%8B%E7%AB%99%E7%82%B9%E8%AE%B0%E5%BD%95/","content":"在经历长达一天的艰苦修改（改一些奇奇怪怪的神奇bug）之后，这个网站总算是建立起来了，之后的时间应该就是使用这里来记录一些学习中的记录以及一些日常的琐碎话吧\n\n建站鸣谢：傻白的blog以及帮了很大忙的131blog\n传送门：\n启用主题 | 131’s Blog (cxy131.site)\nはくのblog (sirohune.site)\n\n踩坑实录：\nhexo d #部署网站\n\n坑点在于之前使用jekyll部署过网站，因此再使用hexo部署时会导致出现很神奇的bug：github相应网页的代码更新，但是action中显示没有部署。来回摸索好久\n最终解决方案：将原本的GitHub库删除重新搭建（删库跑路法），成功\n","tags":["那些神奇的坑与神奇的问题"]},{"title":"sse-net计算机网络笔记","url":"/2023/03/02/sse-net%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/","content":"参考网课：\nChapter 1protocol:发起连接时候双方都遵守的一定规则(规范语法，语义，时序)\nDSL：最之前家庭网络连接方法（数字用户线）\ninternet标准：\n\nRFC\nIETF\nWIFI\nWAPI\n\nTCP：传输控制协议，应用\n\nHTTP\nFTP\nSMTP\nTelnet\n\nHost:数据发送方\nLinks:实体媒介（网络线缆等等）\n结论：链路交换不适合计算机之间通信\n\n建立时间长\n可靠性低\n浪费资源较多\n\nChapter 2提问部分：\n对于浏览器下载文件通常是分为小切片下载在缓存中并通过相关算法拼凑，如果中断重新连接能否继续下载则看软件相关系统处理方式怎么样\n对于访问github等网站时（应用层web部分）如果访问时间过长系统会判定为连接失败从而放弃\n\n开始讲解分组交换\n分组交换与链路交换\n分组交换网络 存储-转发\nISP第一层ISP：面向客户网络结算点（负责收费）\nIXP：连接多个对等之间的ISP\nICP：（conternt provider）部署自身专用网络并且与各级ISP连接\n网络中每一个节点都是不一样的\n四种延迟传输延迟：一个数据分组需要多长时间发送出来（缓存中也有一个排队延迟）\n处理延时：分组时候查看信号是否有错误情况，\n排队延时：随机的，与当前网络情况相关（比如发送请求）\n传播延迟：物理层面传播的延迟（在线路中传输的速度）\n应用：可以根据运营商的中心机房位置去抢票（乐）\nChapter 3TTLtime to live\n连接时候给定连接时间，超过该时间则认定为连接超时，随后显示网络连接失败\n吞吐量给定时间内平均吞吐量\n协议层网络层次：不同邻接层次之间有相应接口来传输，每一层都向上一层提供服务\n分层顺序：5层\n应用层，传输层，网络层，链路层，物理层\n服务访问点：SAP，上层使用下层的服务通过层之间的接口-地点\n举例：邮箱（SMTP）\n无连接服务：无需预留资源，不需要双方活跃（比如email传输和qq等聊天软件发送信息）\n网络连接需要：端口号\n网络安全部分：\n","tags":["计算机网络"]}]